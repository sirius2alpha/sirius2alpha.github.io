<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>实践 on Sirius&#39; Blog</title>
    <link>//localhost:1313/categories/%E5%AE%9E%E8%B7%B5/</link>
    <description>Recent content in 实践 on Sirius&#39; Blog</description>
    <image>
      <title>Sirius&#39; Blog</title>
      <url>//localhost:1313/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</url>
      <link>//localhost:1313/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</link>
    </image>
    <generator>Hugo -- 0.127.0</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 18 Jun 2024 00:00:00 +0000</lastBuildDate>
    <atom:link href="//localhost:1313/categories/%E5%AE%9E%E8%B7%B5/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Auth微服务开发记录</title>
      <link>//localhost:1313/posts/notes/dev/auth%E5%BE%AE%E6%9C%8D%E5%8A%A1%E5%BC%80%E5%8F%91%E8%AE%B0%E5%BD%95/</link>
      <pubDate>Tue, 18 Jun 2024 00:00:00 +0000</pubDate>
      <guid>//localhost:1313/posts/notes/dev/auth%E5%BE%AE%E6%9C%8D%E5%8A%A1%E5%BC%80%E5%8F%91%E8%AE%B0%E5%BD%95/</guid>
      <description>引入刷新令牌机制</description>
    </item>
    <item>
      <title>proto接口和RPC使用记录</title>
      <link>//localhost:1313/posts/notes/dev/proto%E6%8E%A5%E5%8F%A3%E5%92%8Crpc%E4%BD%BF%E7%94%A8%E8%AE%B0%E5%BD%95/</link>
      <pubDate>Tue, 18 Jun 2024 00:00:00 +0000</pubDate>
      <guid>//localhost:1313/posts/notes/dev/proto%E6%8E%A5%E5%8F%A3%E5%92%8Crpc%E4%BD%BF%E7%94%A8%E8%AE%B0%E5%BD%95/</guid>
      <description>引入刷新令牌机制</description>
    </item>
    <item>
      <title>全国大学生市场调研大赛-数据分析</title>
      <link>//localhost:1313/posts/notes/data-analysis/wumengtrip/</link>
      <pubDate>Thu, 21 Mar 2024 00:00:00 +0000</pubDate>
      <guid>//localhost:1313/posts/notes/data-analysis/wumengtrip/</guid>
      <description>记录在正大杯中使用到的一些数据分析思路方法</description>
    </item>
    <item>
      <title>使用LaTex制作中文简历</title>
      <link>//localhost:1313/posts/notes/tools/latex_resume/</link>
      <pubDate>Mon, 18 Mar 2024 00:00:00 +0000</pubDate>
      <guid>//localhost:1313/posts/notes/tools/latex_resume/</guid>
      <description>这篇文章记录了简单的LaTex语法，以及我修改模板的过程</description>
    </item>
    <item>
      <title>使用Selenium库爬取网易云音乐和携程旅行评论</title>
      <link>//localhost:1313/posts/notes/data-analysis/spider/</link>
      <pubDate>Wed, 14 Feb 2024 00:00:00 +0000</pubDate>
      <guid>//localhost:1313/posts/notes/data-analysis/spider/</guid>
      <description>记录使用Selenium爬取网易云和携程旅行评论的过程</description>
    </item>
    <item>
      <title>点击排行榜scoreboard</title>
      <link>//localhost:1313/posts/notes/dev/dev-%E7%82%B9%E5%87%BB%E6%8E%92%E8%A1%8C%E6%A6%9C/</link>
      <pubDate>Sun, 21 Jan 2024 00:00:00 +0000</pubDate>
      <guid>//localhost:1313/posts/notes/dev/dev-%E7%82%B9%E5%87%BB%E6%8E%92%E8%A1%8C%E6%A6%9C/</guid>
      <description>本文记录使用vue&#43;gin&#43;redis搭建了一个简单的点击排行榜，虽然有点无聊，但是两个幼稚鬼玩好好笑hhh</description>
    </item>
    <item>
      <title>在linux上配置clash，通过Dashboard控制</title>
      <link>//localhost:1313/posts/notes/network/clash-for-linux%E9%A3%9F%E7%94%A8%E6%8C%87%E5%8D%97/</link>
      <pubDate>Mon, 08 Jan 2024 00:00:00 +0000</pubDate>
      <guid>//localhost:1313/posts/notes/network/clash-for-linux%E9%A3%9F%E7%94%A8%E6%8C%87%E5%8D%97/</guid>
      <description>记录配置clash的过程</description>
    </item>
    <item>
      <title>在docker中安装redis</title>
      <link>//localhost:1313/posts/notes/database/%E5%9C%A8docker%E4%B8%AD%E9%83%A8%E7%BD%B2redis/</link>
      <pubDate>Thu, 04 Jan 2024 00:00:00 +0000</pubDate>
      <guid>//localhost:1313/posts/notes/database/%E5%9C%A8docker%E4%B8%AD%E9%83%A8%E7%BD%B2redis/</guid>
      <description>记录部署在docker中部署redis的过程，并使用k8s进行容器编排管理</description>
    </item>
    <item>
      <title>内网穿透——frp和花生壳实现从外部网络访问家中主机</title>
      <link>//localhost:1313/posts/notes/network/%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F/</link>
      <pubDate>Wed, 20 Dec 2023 00:00:00 +0000</pubDate>
      <guid>//localhost:1313/posts/notes/network/%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F/</guid>
      <description>记录分别使用花生壳和frp实现内网穿透</description>
    </item>
    <item>
      <title>ubuntu输入法RIME中州韵配置ibus-rime</title>
      <link>//localhost:1313/posts/notes/ubuntu/%E8%BE%93%E5%85%A5%E6%B3%95rime%E4%B8%AD%E5%B7%9E%E9%9F%B5%E9%85%8D%E7%BD%AEibus-rime/</link>
      <pubDate>Tue, 19 Dec 2023 00:00:00 +0000</pubDate>
      <guid>//localhost:1313/posts/notes/ubuntu/%E8%BE%93%E5%85%A5%E6%B3%95rime%E4%B8%AD%E5%B7%9E%E9%9F%B5%E9%85%8D%E7%BD%AEibus-rime/</guid>
      <description>记录安装配置RIME的过程</description>
    </item>
    <item>
      <title>把blog部署到华为云nginx</title>
      <link>//localhost:1313/posts/notes/dev/%E5%8D%9A%E5%AE%A2nginx%E9%83%A8%E7%BD%B2%E5%88%B0%E5%8D%8E%E4%B8%BA%E4%BA%91/</link>
      <pubDate>Sat, 16 Dec 2023 00:00:00 +0000</pubDate>
      <guid>//localhost:1313/posts/notes/dev/%E5%8D%9A%E5%AE%A2nginx%E9%83%A8%E7%BD%B2%E5%88%B0%E5%8D%8E%E4%B8%BA%E4%BA%91/</guid>
      <description>这篇文章记录了把本地的博客部署到华为云ubuntu的nginx</description>
    </item>
    <item>
      <title>Docker和K8S部署</title>
      <link>//localhost:1313/posts/notes/cloud-native/docker%E5%92%8Ck8s%E9%83%A8%E7%BD%B2/</link>
      <pubDate>Thu, 14 Dec 2023 00:00:00 +0000</pubDate>
      <guid>//localhost:1313/posts/notes/cloud-native/docker%E5%92%8Ck8s%E9%83%A8%E7%BD%B2/</guid>
      <description>这篇文章部署K8S的过程</description>
    </item>
    <item>
      <title>hadoop部署</title>
      <link>//localhost:1313/posts/notes/cloud-native/hadoophive%E9%83%A8%E7%BD%B2/</link>
      <pubDate>Thu, 14 Dec 2023 00:00:00 +0000</pubDate>
      <guid>//localhost:1313/posts/notes/cloud-native/hadoophive%E9%83%A8%E7%BD%B2/</guid>
      <description>这篇文章记录了在三台云服务器上部署hadoop的过程</description>
    </item>
    <item>
      <title>在云服务器上部署mysql</title>
      <link>//localhost:1313/posts/notes/database/%E5%9C%A8%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%B8%8A%E9%83%A8%E7%BD%B2mysql/</link>
      <pubDate>Thu, 30 Nov 2023 00:00:00 +0000</pubDate>
      <guid>//localhost:1313/posts/notes/database/%E5%9C%A8%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%B8%8A%E9%83%A8%E7%BD%B2mysql/</guid>
      <description>这篇文章记录了在两台主机上部署mysql</description>
    </item>
    <item>
      <title>GNS3&#43;RIP/OSRF</title>
      <link>//localhost:1313/posts/notes/network/gns3&#43;cisco-%E5%8A%A8%E6%80%81%E8%B7%AF%E7%94%B1%E5%AE%9E%E9%AA%8C/</link>
      <pubDate>Mon, 30 Oct 2023 00:00:00 +0000</pubDate>
      <guid>//localhost:1313/posts/notes/network/gns3&#43;cisco-%E5%8A%A8%E6%80%81%E8%B7%AF%E7%94%B1%E5%AE%9E%E9%AA%8C/</guid>
      <description>这篇文章记录了使用GNS3软件进行动态路由实验。</description>
    </item>
    <item>
      <title>GNS3&#43;static router</title>
      <link>//localhost:1313/posts/notes/network/gns3%E9%9D%99%E6%80%81%E8%B7%AF%E7%94%B1%E5%AE%9E%E9%AA%8C/</link>
      <pubDate>Mon, 30 Oct 2023 00:00:00 +0000</pubDate>
      <guid>//localhost:1313/posts/notes/network/gns3%E9%9D%99%E6%80%81%E8%B7%AF%E7%94%B1%E5%AE%9E%E9%AA%8C/</guid>
      <description>这篇文章记录了使用GNS3软件进行静态路由实验</description>
    </item>
    <item>
      <title>常用的网络命令</title>
      <link>//localhost:1313/posts/notes/network/network-commands/</link>
      <pubDate>Thu, 26 Oct 2023 00:00:00 +0000</pubDate>
      <guid>//localhost:1313/posts/notes/network/network-commands/</guid>
      <description>ipconfig, ifconfig, ip ipconfig是windows中的命令，linux上是ifconfig，但ip命令比ifconfig更强大，旨在取代ifconfig命令。
ping ping命令是DOS命令，一般用于检测网络是否通畅以及网络连接速度，结果只越大，说明速度越慢。它使用网络层的ICMP协议。
ping [参数选项] [主机名或IP地址] linux 参数 含义 -c 设置完成要求回应的次数 -i 指定收发信息的间隔时间 -s 设置数据包的大小 -w 在设定的秒后退出 windows 参数 含义 -t 连续对IP地址执行ping命令，直到用户以&amp;lt;control+c&amp;gt;键强制中断 -l 指定ping命令的数据长度 -n 执行特定次数的ping命令 netstat netstat 用来查看当前操作系统的网络连接状态、路由表、接口统计等信息，来自于 net-tools 工具包，ss 是 netstat 的升级版。
参数 含义 -a 显示主机中所有活动的网络连接信息 (包括监听、非监听状态的服务端口) -n 以数字的形式显示相关的主机地址、端口等信息 -p 显示与网络连接相关联的进程号、进程名称信息 (该选项需要 root 权限) -l 显示处于监听 (Listen) 状态的网络连接及端口信息 -t 查看 TCP (Transmission Control Protocol，传输控制协议) 相关的信息 -u 显示 UDP (User Datagram Protocol，用户数据报协议) 协议相关的信息 -r 显示路由表信息 -i 显示网卡列表 -g 显示组播组的关系 -s 显示网络统计信息 常用命令选项：</description>
    </item>
    <item>
      <title>使用GORM操作数据库</title>
      <link>//localhost:1313/posts/notes/database/%E5%AE%9E%E8%B7%B5%E4%BD%BF%E7%94%A8-gorm%E8%BF%9E%E6%8E%A5%E6%95%B0%E6%8D%AE%E5%BA%93/</link>
      <pubDate>Fri, 25 Aug 2023 00:00:00 +0000</pubDate>
      <guid>//localhost:1313/posts/notes/database/%E5%AE%9E%E8%B7%B5%E4%BD%BF%E7%94%A8-gorm%E8%BF%9E%E6%8E%A5%E6%95%B0%E6%8D%AE%E5%BA%93/</guid>
      <description>记录第一次使用ORM框架，以及GORM的第一次</description>
    </item>
    <item>
      <title>网络安全——认证与加密</title>
      <link>//localhost:1313/posts/notes/security/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8/</link>
      <pubDate>Mon, 31 Jul 2023 00:00:00 +0000</pubDate>
      <guid>//localhost:1313/posts/notes/security/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8/</guid>
      <description>记录网络安全方向的一些实践：加密与认证、软件破解、常见攻击和预防（XSS, CSRF）等</description>
    </item>
    <item>
      <title>CSRF攻击</title>
      <link>//localhost:1313/posts/notes/security/csrf-attack/</link>
      <pubDate>Sun, 21 May 2023 00:00:00 +0000</pubDate>
      <guid>//localhost:1313/posts/notes/security/csrf-attack/</guid>
      <description>简介 ​CSRF攻击利用了受害者已经通过身份验证并且在一个网站上建立的有效会话，来执行未经授权的操作。当受害者在一个网站上登录并获得一个会话（例如通过使用用户名和密码进行身份验证），该网站会为其分配一个令牌或会话ID，以便在后续的请求中验证用户的身份。
​CSRF攻击者会通过诱使受害者访问一个恶意网站或点击恶意链接，来利用受害者的已验证会话。由于受害者在浏览器中仍然保持着有效会话，攻击者可以构造特制的请求，以利用该会话来执行恶意操作，而这些操作是受害者并不知情或未经授权的。
​例如，假设受害者在银行网站上登录并建立了一个有效的会话。攻击者可以通过电子邮件或社交媒体发送一个包含恶意链接的消息给受害者。如果受害者点击了该链接，他们的浏览器将自动向银行网站发送一个请求，而这个请求中包含了受害者的有效会话信息。银行网站在验证会话时会认为这个请求是合法的，因为会话是有效的，所以它执行了该请求所代表的操作，如转账、修改账户信息等，而受害者是毫不知情的。
​CSRF攻击的目标是利用受害者的已验证会话来执行攻击者所期望的未经授权操作，从而导致受害者的损失或者对系统的安全产生威胁。
补充知识 cookie 一般情况下，cookie是以键值对进行表示的(key-value)，例如name=jack，这个就表示cookie的名字是name，cookie携带的值是jack。
cookie有2种存储方式，一种是会话性，一种是持久性。
会话性：如果cookie为会话性，那么cookie仅会保存在客户端的内存中，当我们关闭客服端时cookie也就失效了 持久性：如果cookie为持久性，那么cookie会保存在用户的硬盘中，直至生存期结束或者用户主动将其销毁。
组成 （1）cookie名称 （2）cookie值 （3）Expires：过期时间。当过了过期时间后，浏览器会将该cookie删除。如果不设置Expires，则关闭浏览器后该cookie失效。 （4）Path：用来设置在路径下面的页面才可以访问该cookie，一般设为/，以表示同一站点的所有页面都可以访问该cookie。 （5）Domain：用来指定哪些子域才可以访问cookie，格式一般为“.XXX.com” （6）Secure:如果设置了secure没有值，则代表只有使用HTTPS协议才可以访问 （7）HttpOnly：如果在cookie中设置了HttpOnly属性，那么通过JavaScript脚本等将无法读取到cookie信息。
URL URL（统一资源定位符）的一般格式如下：
scheme://host:port/path?query_parameters#fragment_identifier 具体解释如下：
Scheme（协议）：指定用于访问资源的协议，例如HTTP、HTTPS、FTP等。它是URL的开头部分，通常以双斜杠（//）结尾。 Host（主机）：指定目标资源所在的主机名或IP地址。主机名可以是域名（例如example.com）或IP地址（例如192.168.0.1）。 Port（端口）：指定用于访问目标资源的端口号（可选）。默认的端口号根据协议而不同，如HTTP默认端口是80，HTTPS默认端口是443。如果URL中没有指定端口，将使用默认端口。 Path（路径）：指定资源在服务器上的路径（可选）。路径部分是指服务器上资源的具体位置，可以是文件路径或目录路径。 Query Parameters（查询参数）：包含在URL中的键值对参数（可选）。查询参数通常用于向服务器传递额外的信息，多个参数之间使用&amp;quot;&amp;amp;&amp;ldquo;符号分隔。 Fragment Identifier（片段标识符）：用于标识文档中的特定片段（可选）。片段标识符通常由一个锚点或特定位置的标识符组成，用于在文档中导航到指定位置。 实验过程 使用Flask框架进行构建web应用。
文件架构 ├── web-csrf/ │ ├── webA.py │ ├── webB.py │ ├── templates/ │ │ ├── home.html │ │ ├── login.html │ └── static/ │ └── style.css 源码 webA:
# webA.py import hashlib import re import mysql.connector from flask import Flask, request, render_template, make_response app = Flask(__name__) db = mysql.</description>
    </item>
    <item>
      <title>栈溢出攻击</title>
      <link>//localhost:1313/posts/notes/security/stack_overflow-attack/</link>
      <pubDate>Fri, 05 May 2023 00:00:00 +0000</pubDate>
      <guid>//localhost:1313/posts/notes/security/stack_overflow-attack/</guid>
      <description>实验程序源代码：
#include &amp;lt;stdio.h&amp;gt; #include &amp;lt;windows.h&amp;gt; #include &amp;lt;string.h&amp;gt; #include &amp;lt;stdlib.h&amp;gt; #define PASSWORD &amp;#34;1234567&amp;#34; int verify_password(char *password) { int authenticated; char buffer[44]; authenticated = strcmp(password, PASSWORD); strcpy(buffer, password); // over flowed here! return authenticated; } int main() { int valid_flag = 0; char password[1024];l FILE *fp; LoadLibrary(&amp;#34;user32.dll&amp;#34;); // prepare for messagebox if (!(fp = fopen(&amp;#34;password.txt&amp;#34;, &amp;#34;rw+&amp;#34;))) { exit(0); } fscanf(fp, &amp;#34;%s&amp;#34;, password); valid_flag = verify_password(password); if (valid_flag) { printf(&amp;#34;incorrect password!\n&amp;#34;); } else { printf(&amp;#34;Congratulation!</description>
    </item>
    <item>
      <title>加密与认证</title>
      <link>//localhost:1313/posts/notes/security/encryption-authentication/</link>
      <pubDate>Wed, 12 Apr 2023 00:00:00 +0000</pubDate>
      <guid>//localhost:1313/posts/notes/security/encryption-authentication/</guid>
      <description>任务 采用Java/Python语言编写一个较为完整的加密与认证程序，要求具有：
具有较完整的图形化界面； 使用MD5、SHA系列算法，实现消息摘要，确保消息的完整性； 使用DES、AES等算法实现对称加密，确保消息的机密性； 使用RSA算法，实现公钥加密，且用私钥解密，比较不对称加密和对称加密的性能； 实现基于数字证书的数字签名和验证（含证书的生成和创建）； 消息摘要 消息摘要的作用 在网络安全目标中，要求信息在生成、存储或传输过程中保证不被偶然或蓄意地删除、修改、伪造、乱序、重放、插入等破坏和丢失，因此需要一个较为安全的标准和算法，以保证数据的完整性。
常见的消息摘要算法有： Ron Rivest设计的MD（Standard For Message Digest，消息摘要标准）算法 NIST设计的SHA（Secure Hash Algorithm，安全散列算法）
单向散列函数 特点 不定长的输入和定长的输出；
对于及其微小的变化，如1bit的变化，器哈希函数所产生的值也差异巨大；
对于不同的原像都有不同的映像，从散列值不可能推导出消息M ，也很难通过伪造消息M’来生成相同的散列值。
Hash函数的值称为作为自变量的消息的“散列值”或“消息摘要”、“数字指纹”
哈希函数的分类 根据安全水平 弱无碰撞 强无碰撞 ​	注：强无碰撞自然含弱无碰撞！
根据是否使用密钥 带秘密密钥的Hash函数：消息的散列值由只有通信双方知道的秘密密钥K来控制，此时散列值称作MAC(Message Authentication Code) 不带秘密密钥的Hash函数：消息的散列值的产生无需使用密钥，此时散列值称作MDC(Message Detection Code) 哈希函数的应用 由Hash函数产生消息的散列值 以消息的散列值来判别消息的完整性 用加密消息的散列值来产生数字签名 用口令的散列值来安全存储口令（认证系统中的口令列表中仅存储口令的Hash函数值，以避免口令被窃取。认证时用输入口令的Hash函数值与其比较） 安全哈希函数的实现 输入数据分成L个长度固定为r的分组：M=(M1,M2,…,ML) 末组附加消息的长度值并通过填充凑足r位 压缩函数 f使用n位的链接变量Hi ,其初值H0=IV可任意指定 压缩函数 f的最后n位输出HL取作散列值 哈希函数：生日攻击 当哈希函数的输入位数太短的时候，就容易产生哈希碰撞，即出现两个原像对应用一个映像的问题。
生日问题 一个教室中至少有几个学生才能使有两个学生生日相同的概率不小于1/2； 等价于“球匣问题” 设J个球随机扔进N个匣子，存在一个匣子中至少有两个球的概率为p，则可以推导出: J2≈-2Nln(1-p)或 p≈ 1-e-J2/2/N 答案 将365个生日看作N=365个匣子，将学生看作球，p=0.5，则由上式可算出J≈23，即23个学生中有两个学生生日相同的概率不小于1/2；
生日攻击实例：
​	假设张三承诺支付李四100万，约定由李四负责起草合同，并通过8位的散列码H(M)实施信息认证。聪明而无德的李四先起草一个100万的版本，并通过变化其中3个无关紧要之处以得到23=8个不同的消息明文并计算它们的H(M)，形成集合A；然后再起草一个200万的版本，用同样方法又得到23=8 个不同的消息明文及其H(M)，形成集合B。 ​	由生日问题知：24个8位比特串中发生碰撞的概率不小于1/2，故在A和B共24 =16个H(M)中有可能存在相同的一对，并极有可能一个在A中而另一个在B中。假设与它们对应的明文为MA （100万版） 和MB （200万版） 。于是李四用MA让张三签署并公证，而在传送时偷偷地用MB替代MA 。由于H(MA)= H(MB)，故张三确信签署的文件未被篡改。当李四要求张三支付200万时，法院根据MB判李四胜诉，而张三因此损失100万。</description>
    </item>
    <item>
      <title>Kubernetes学习和实践</title>
      <link>//localhost:1313/posts/notes/cloud-native/kubernetes%E5%AD%A6%E4%B9%A0%E4%B8%8E%E5%AE%9E%E8%B7%B5/</link>
      <pubDate>Sun, 30 Oct 2022 00:00:00 +0000</pubDate>
      <guid>//localhost:1313/posts/notes/cloud-native/kubernetes%E5%AD%A6%E4%B9%A0%E4%B8%8E%E5%AE%9E%E8%B7%B5/</guid>
      <description>这篇文章记录了阅读Kubernetes inAction的学习记录，以及使用k8s进行一些实战的过程</description>
    </item>
  </channel>
</rss>
